# Generated by Django 5.0.1 on 2024-03-06 12:00

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catagory_type', models.CharField(max_length=254, verbose_name='catogory type')),
                ('details', models.CharField(blank=True, max_length=254, verbose_name='catogory details')),
                ('max_age', models.IntegerField()),
                ('price', models.IntegerField(default=0)),
                ('team_size', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_no', models.IntegerField(blank=True, null=True)),
                ('match_state', models.BooleanField(default=False)),
                ('sets', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_type', models.CharField(max_length=254, verbose_name='game type')),
                ('default_categories', models.ManyToManyField(blank=True, related_name='game_catagory', to='organisers.category')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='fixture',
            field=models.ManyToManyField(blank=True, related_name='category_fixture', to='organisers.match'),
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254, unique=True, verbose_name='organisation name')),
                ('mail', models.EmailField(max_length=254)),
                ('wh_num', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(regex='^[0-9]{10}$')], verbose_name='whatsapp number')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('mods', models.ManyToManyField(blank=True, related_name='organisation_mod', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organisers.category')),
                ('members', models.ManyToManyField(blank=True, related_name='team_members', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='loser',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='loser', to='organisers.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='team1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team1', to='organisers.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='team2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='team2', to='organisers.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='winner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winner', to='organisers.team'),
        ),
        migrations.AddField(
            model_name='category',
            name='teams',
            field=models.ManyToManyField(blank=True, related_name='category_team', to='organisers.team'),
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254, unique=True, verbose_name='tournament name')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('categories', models.ManyToManyField(blank=True, related_name='tournament_catagory', to='organisers.category')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organisers.game')),
                ('mods', models.ManyToManyField(blank=True, related_name='tournament_mod', to=settings.AUTH_USER_MODEL)),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organisers.organisation')),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='tournament',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organisers.tournament'),
        ),
    ]
